{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d33a7b38",
   "metadata": {},
   "source": [
    "# 1. Hello world y tipos de datos  \n",
    "\n",
    "#### 1. Sentencia print  \n",
    "\n",
    "#### 2. Hello world!  \n",
    "\n",
    "#### 3. Tipos de datos  \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "450d5cd1",
   "metadata": {},
   "source": [
    "## Print"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2c1a80bb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello world!\n",
      "3\n",
      "3 4\n",
      "3.4\n",
      "5\n"
     ]
    }
   ],
   "source": [
    "#Sentencia print\n",
    "\n",
    "print('Hello world!')\n",
    "print(3)\n",
    "print(3,4)\n",
    "print(3.4)\n",
    "print(3+2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba593fef",
   "metadata": {},
   "source": [
    "## Comentarios"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ff23a415",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Comentario entre el codigo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "06d59c88",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Comentario\\nentre\\nlineas '"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"\"\"Comentario\n",
    "entre\n",
    "lineas \"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "22f686ff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Comentario \\nentre \\nlineas'"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''Comentario \n",
    "entre \n",
    "lineas'''"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "342792d6",
   "metadata": {},
   "source": [
    "## Tipos de datos"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a756f45",
   "metadata": {},
   "source": [
    "### Enteros"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "7511e697",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3\n",
      "-1\n",
      "2\n",
      "1\n",
      "<class 'int'>\n"
     ]
    }
   ],
   "source": [
    "#Numeros enteros\n",
    "a = 1\n",
    "b = 2 \n",
    "\n",
    "print(type(a))\n",
    "print(type(b))\n",
    "\n",
    "print(a+b) #Suma\n",
    "print(a-b) #Resta\n",
    "print(a*b) #Multiplicación\n",
    "print(a**b) #Potencia"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6feb446",
   "metadata": {},
   "source": [
    "### Floats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "58fd602f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'float'>\n",
      "<class 'float'>\n",
      "2.33456\n",
      "-0.13456\n",
      "1.3580160000000001\n",
      "1.1248684950998158\n"
     ]
    }
   ],
   "source": [
    "#Numeros float\n",
    "c = 1.1\n",
    "d = 1.23456\n",
    "\n",
    "print(type(c))\n",
    "print(type(d))\n",
    "\n",
    "print(c+d) #Suma\n",
    "print(c-d) #Resta\n",
    "print(c*d) #Multiplicación\n",
    "print(c**d) #Potencia"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad6da9c3",
   "metadata": {},
   "source": [
    "### Strings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "6078b59c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "<class 'str'>\n",
      "1.1\n",
      "<class 'str'>\n",
      "String1\n"
     ]
    }
   ],
   "source": [
    "#String - cadenas de texto\n",
    "\n",
    "#Combinación de caracteres alfanuméricos\n",
    "\n",
    "s_1 = 'String'\n",
    "s_2 = 'My String'\n",
    "s_3 = 'Other string with numbers 2344'\n",
    "s_4 = str(a)\n",
    "s_5 = str(c)\n",
    "\n",
    "print(s_4)\n",
    "print(type(s_4))\n",
    "print(s_5)\n",
    "print(type(s_5))\n",
    "\n",
    "#s_6 = s_1+a\n",
    "s_7 = s_1 + s_4\n",
    "print(s_7)\n",
    "s_7 = s_1 + 'is ' + s_4\n",
    "print(s_7)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6fb25986",
   "metadata": {},
   "source": [
    "### Boleans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "5c52338e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "True\n",
      "False\n"
     ]
    }
   ],
   "source": [
    "#Boleanos \n",
    "\n",
    "# Los booleanos son dos valores: True, False\n",
    "\n",
    "b_1 = True\n",
    "b_4 = False\n",
    "\n",
    "print(s_1 == s_1)\n",
    "print(s_1 in s_2)\n",
    "print(s_1 in s_3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "05886626",
   "metadata": {},
   "outputs": [],
   "source": [
    "name = input('¿Cuál es tu nombre? ')\n",
    "age = int(input('¿Cuántos años tienes?'))\n",
    "print('Me llamo '+name+', y mi edad es '+str(age))\n",
    "print(type(name))\n",
    "print(type(age))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6feecf9e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
